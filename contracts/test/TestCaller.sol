pragma solidity ^0.5.8;

import {HelpersForTests} from "./HelpersForTests.sol";
import {GenericEllipticCurve} from "../GenericEllipticCurve.sol";

contract TestCaller {

    function testG1Add_BLS12_384_M() public view returns (bool) {
        bytes memory input = hex"0131026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012103c192577dfb697d258e5f48f4c3f36bb518d0ea9b498ca3559dfb03a2c685a52900b1d9d7d4e19966f41ed390530d41eebaaa1c707c3fb44303ae58df3c9e9c0589b4692a397ecdc90103df90ba78fb4a1c01af3190c07b6494b12dba8aae83c6f5a61251f82bdddcf4a00d0e8277cab9a7febdbbdb3f961ba3a2b38b9ad7a6a3cf4902479e227b1762e5a8322ab109842fc1e481440020137ef6cd6282796bad37b95877281633289033017183acf2472e2b6c01851c8aab7868d17dc6bf38ba905a19ab8bcf308f1b417e833fa548f6a33afb4b91488d829cf924caeab5c09ad4593663";
        uint256 inputLength = input.length;
        uint256 outputLength = 98;
        bytes memory correctOutput = hex"00bac7ab58397d69d40ee30088f44fc96e363794959408a688228799780aafb3fee41f5abf5b11e7e0add9e460624d41660194ef9a5adecd58f28b842a6a9bc451c76d8cb3f54891d273b5b515a8e1b06ddb917082016c114923b5ce1e8212fbabb1";
        bytes memory output = GenericEllipticCurve.callEip1962(
            9,
            input,
            inputLength,
            outputLength
        );
        return HelpersForTests.equal(output, correctOutput);
    }

    function testG1Mul_BLS12_384_M() public view returns (bool) {
        bytes memory input = hex"0231026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012103c192577dfb697d258e5f48f4c3f36bb518d0ea9b498ca3559dfb03a2c685a52900b1d9d7d4e19966f41ed390530d41eebaaa1c707c3fb44303ae58df3c9e9c0589b4692a397ecdc90103df90ba78fb4a1c01af3190c07b6494b12dba8aae83c6f5a61251f82bdddcf4a00d0e8277cab9a7febdbbdb3f961ba3a2b38b9ad7a6a3cf4901a377718a6300d8dfa68b483f26b2d31c2501427bf56373224e9a7e9d15cabfc9";
        uint256 inputLength = input.length;
        uint256 outputLength = 98;
        bytes memory correctOutput = hex"02479e227b1762e5a8322ab109842fc1e481440020137ef6cd6282796bad37b95877281633289033017183acf2472e2b6c01851c8aab7868d17dc6bf38ba905a19ab8bcf308f1b417e833fa548f6a33afb4b91488d829cf924caeab5c09ad4593663";
        bytes memory output = GenericEllipticCurve.callEip1962(
            9,
            input,
            inputLength,
            outputLength
        );
        return HelpersForTests.equal(output, correctOutput);
    }

    function testG1Multiexp_BLS12_384_M() public view returns (bool) {
        bytes memory input = hex"0331026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012103c192577dfb697d258e5f48f4c3f36bb518d0ea9b498ca3559dfb03a2c685a5290200b1d9d7d4e19966f41ed390530d41eebaaa1c707c3fb44303ae58df3c9e9c0589b4692a397ecdc90103df90ba78fb4a1c01af3190c07b6494b12dba8aae83c6f5a61251f82bdddcf4a00d0e8277cab9a7febdbbdb3f961ba3a2b38b9ad7a6a3cf4901a377718a6300d8dfa68b483f26b2d31c2501427bf56373224e9a7e9d15cabfc900b1d9d7d4e19966f41ed390530d41eebaaa1c707c3fb44303ae58df3c9e9c0589b4692a397ecdc90103df90ba78fb4a1c01af3190c07b6494b12dba8aae83c6f5a61251f82bdddcf4a00d0e8277cab9a7febdbbdb3f961ba3a2b38b9ad7a6a3cf4901a377718a6300d8dfa68b483f26b2d31c2501427bf56373224e9a7e9d15cabfc9";
        uint256 inputLength = input.length;
        uint256 outputLength = 98;
        bytes memory correctOutput = hex"024b09a6568b835ac276f02c3f17bbfbf359e0e0b1d4e53b26f71fc26882c0cd730c3cb838fc468b5c7fac359141c8d89301924b5b6e18ae2fd5e509f7b3d31316c273b95be14310c5c656776d42125ed9c5b82aaf0479905e17238034c05216e1b4";
        bytes memory output = GenericEllipticCurve.callEip1962(
            9,
            input,
            inputLength,
            outputLength
        );
        return HelpersForTests.equal(output, correctOutput);
    }

    function testG2Add_BLS12_384_M() public view returns (bool) {
        bytes memory input = hex"0431026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045d02026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012103c192577dfb697d258e5f48f4c3f36bb518d0ea9b498ca3559dfb03a2c685a5290101ffde193f98185f975ffb1372580fd7a93194e7a50a5cf7852f292455e0a34451c82bd7901a3de0c2a3479e716cbbdc00ac30a79956814c1a0e970fb255184f367d122abb6f3f9627ac2c2c97a68379d16883dfaf2549e3a3dce33f3bea1247df01460c7673ee5b7a2db0e9452d1b7fbb502e3f999f1b1dcd31e7062346408863c7f973b94e34c8b55c32bf5e829c664688005aa657b27ade7a8f4b1cabea24ce403f3ce23f7274e2569c90bcb97a4c04434c78438560cec76719bde389aedc170113004b6e56e5c05c0326653db28ee57c4155a8257dfe50695f14e5bb6c15113429f154aa5cd0a75a9b7db8b7d9c878a11515024e5f4800afc640288d68e5c9c2209795f8789465e0b0f49d1c047341cc61b52068eff7186db42de70eae178e6a08e75b0096d93f4253ae722fd5833f508110b4154a4ed440401174ddeaec89ac236a9b8bb325ac07253e64b18e8cce66ecac4c1f01c2721afe0cb38260be4cf450e317e4c60e191b3c98348aae52d7b906bb9eacbb99ea7064ccac70b63a6926794ff538ce";
        uint256 inputLength = input.length;
        uint256 outputLength = 196;
        bytes memory correctOutput = hex"0194e46089770aa2ea845ecec46f92f6919aaf66fb2f711465417c7ec4a5f92fe17ce125cd9b4514879a36765cec3588e6017f59306b4c87d254c74477a2e61069d661b3af153372f618fc06a72af6c1c0743258cfb76b3bb6c380ce9e8c253565fa00504e98a38fd128896df2f5bdff5a096b179ee51f0cd8c7cbb596c15d55efad1c984bc5b306e5d13072aec94910fa7c4d0218857f40a9a4b93518037136711687f763e4dbc097b2181a5ac6310f17e316ceb9c776ab429bf66e3cf7cf64e15bc891";
        bytes memory output = GenericEllipticCurve.callEip1962(
            9,
            input,
            inputLength,
            outputLength
        );
        return HelpersForTests.equal(output, correctOutput);
    }
    
    function testG2Mul_BLS12_384_M() public view returns (bool) {
        bytes memory input = hex"0531026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045d02026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012103c192577dfb697d258e5f48f4c3f36bb518d0ea9b498ca3559dfb03a2c685a5290101ffde193f98185f975ffb1372580fd7a93194e7a50a5cf7852f292455e0a34451c82bd7901a3de0c2a3479e716cbbdc00ac30a79956814c1a0e970fb255184f367d122abb6f3f9627ac2c2c97a68379d16883dfaf2549e3a3dce33f3bea1247df01460c7673ee5b7a2db0e9452d1b7fbb502e3f999f1b1dcd31e7062346408863c7f973b94e34c8b55c32bf5e829c664688005aa657b27ade7a8f4b1cabea24ce403f3ce23f7274e2569c90bcb97a4c04434c78438560cec76719bde389aedc17011301d82faa3935ba82cc72fca999eaa64a3e13f4b70e08eae12074e1841ea7e78c19";
        uint256 inputLength = input.length;
        uint256 outputLength = 196;
        bytes memory correctOutput = hex"004b6e56e5c05c0326653db28ee57c4155a8257dfe50695f14e5bb6c15113429f154aa5cd0a75a9b7db8b7d9c878a11515024e5f4800afc640288d68e5c9c2209795f8789465e0b0f49d1c047341cc61b52068eff7186db42de70eae178e6a08e75b0096d93f4253ae722fd5833f508110b4154a4ed440401174ddeaec89ac236a9b8bb325ac07253e64b18e8cce66ecac4c1f01c2721afe0cb38260be4cf450e317e4c60e191b3c98348aae52d7b906bb9eacbb99ea7064ccac70b63a6926794ff538ce";
        bytes memory output = GenericEllipticCurve.callEip1962(
            9,
            input,
            inputLength,
            outputLength
        );
        return HelpersForTests.equal(output, correctOutput);
    }

    function testG2Multiexp_BLS12_384_M() public view returns (bool) {
        bytes memory input = hex"0631026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045d02026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012103c192577dfb697d258e5f48f4c3f36bb518d0ea9b498ca3559dfb03a2c685a529020101ffde193f98185f975ffb1372580fd7a93194e7a50a5cf7852f292455e0a34451c82bd7901a3de0c2a3479e716cbbdc00ac30a79956814c1a0e970fb255184f367d122abb6f3f9627ac2c2c97a68379d16883dfaf2549e3a3dce33f3bea1247df01460c7673ee5b7a2db0e9452d1b7fbb502e3f999f1b1dcd31e7062346408863c7f973b94e34c8b55c32bf5e829c664688005aa657b27ade7a8f4b1cabea24ce403f3ce23f7274e2569c90bcb97a4c04434c78438560cec76719bde389aedc17011301d82faa3935ba82cc72fca999eaa64a3e13f4b70e08eae12074e1841ea7e78c190101ffde193f98185f975ffb1372580fd7a93194e7a50a5cf7852f292455e0a34451c82bd7901a3de0c2a3479e716cbbdc00ac30a79956814c1a0e970fb255184f367d122abb6f3f9627ac2c2c97a68379d16883dfaf2549e3a3dce33f3bea1247df01460c7673ee5b7a2db0e9452d1b7fbb502e3f999f1b1dcd31e7062346408863c7f973b94e34c8b55c32bf5e829c664688005aa657b27ade7a8f4b1cabea24ce403f3ce23f7274e2569c90bcb97a4c04434c78438560cec76719bde389aedc17011301d82faa3935ba82cc72fca999eaa64a3e13f4b70e08eae12074e1841ea7e78c19";
        uint256 inputLength = input.length;
        uint256 outputLength = 196;
        bytes memory correctOutput = hex"0251b225264a244ab40745438bdf58245cb1e25b569ddfecd7f520c186df6ac17f2943c156d998dbd52745db5289f2b60d014493642ffc64eb3af255e3fd1b0b33966ba899caeef1e06045ab7e324d886b8476060aab5bf77ae1894fa728d842b08e0010a422e9ffec090dc6d25a162adef922ece536210dfe463c64ac93874db711d7522d339783818ecbd8d60bef910088240083862fb896d1ecf83db1dd94db990d9258daed0453213f0846862cb00793e0b913f288a5e309797aa13515c5f5baeef8";
        bytes memory output = GenericEllipticCurve.callEip1962(
            9,
            input,
            inputLength,
            outputLength
        );
        return HelpersForTests.equal(output, correctOutput);
    }

    function testPairing_BLS12_384_M() public view returns (bool) {
        bytes memory input = hex"070131026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012103c192577dfb697d258e5f48f4c3f36bb518d0ea9b498ca3559dfb03a2c685a529026d331f7ce9cdc5e48d73aeedf0a1d7f7870b788046ec2aff712eda78d3fe42dfb8fe05c47ae860b05717583ae170045b00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010109016463d0693ad8bbad0002000ee7950a41f0c887ca93b20ca08a39440ae6e8ed83e01709611584526cecb777c3ab3b9ff9d3b88fbe108fc916396d8f009445fc17ee70f2b9e96db6d4225a9f577d78de557b1ac0fe47f629f93e3427fecf9fa176ff34d2c757004d1ea7b67aff007f5a068d5d9bc448cf9ce3d6fa287d1f01ec5c1ec86a5b2ae55b1c71d7a4281f83b4d2356613f3113bd858a41e9fb10900cdf67dfe485c8c42aeca5c2dac457ab1dfd98df8f19d09bb4a194fc4966418f84a218ead3d6100e567124ea5c106fb1b00399865a965906250a2cb48abd2e1653b41604f3aa2f376539940c4982a4f6f26bcb89bd58cda247bdb02a51636cc5e64024c816df1882a1c2829c6af47014157efb241de61aeaa06d3b8d89c0953ac1e94857c15f2497e0ea3eb6ff80362cb3c0b000ee7950a41f0c887ca93b20ca08a39440ae6e8ed83e01709611584526cecb777c3ab3b9ff9d3b88fbe108fc916396d8f01d8ed2364fb5cd32aa405f819ce4738a009929a2acbd16a012938b07f95ca1ae0e95e644d7bb38de900170b1c39b9895e007f5a068d5d9bc448cf9ce3d6fa287d1f01ec5c1ec86a5b2ae55b1c71d7a4281f83b4d2356613f3113bd858a41e9fb10900cdf67dfe485c8c42aeca5c2dac457ab1dfd98df8f19d09bb4a194fc4966418f84a218ead3d6100e567124ea5c106fb1b00399865a965906250a2cb48abd2e1653b41604f3aa2f376539940c4982a4f6f26bcb89bd58cda247bdb02a51636cc5e64024c816df1882a1c2829c6af47014157efb241de61aeaa06d3b8d89c0953ac1e94857c15f2497e0ea3eb6ff80362cb3c0b";
        uint256 inputLength = input.length;
        uint256 outputLength = 1;
        bytes memory correctOutput = hex"01";
        bytes memory output = GenericEllipticCurve.callEip1962(
            9,
            input,
            inputLength,
            outputLength
        );
        return HelpersForTests.equal(output, correctOutput);
    }
}